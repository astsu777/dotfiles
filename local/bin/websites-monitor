#!/usr/bin/env bash
#=========================================================================
# Author: Gaetan (gaetan@ictpourtous.com) - Twitter: @astsu777
# Creation: Sun 22 Aug 2021 12:17:02
# Last modified: Fri 08 Dec 2023 16:45:57
# Version: 1.0
#
# Description: check if a list of URLs returns a HTTP/200 OK or not
#=========================================================================

#=======================
# Requirements
#=======================

if ! type curl > /dev/null 2>&1; then
	echo "Curl is not installed! Please install the 'curl' package"
	exit 2
fi

#====================
# Print help if no input
#====================

if [[ -z "$2" ]]; then
	echo "
Missing argument: url list!

Usage: websites_monitor <OPTION> \"input_file\" (Example: websites_monitor --insecure urllist.txt)
Options:
	--secure: validate the SSL certificate of the remote server
	--insecure: do not validate the SSL certificate of the remote server

------------
The URL list file must have a single URL per line
"
	exit 1
fi

#====================
# Variables
#====================

urlsum=$(awk 'END{print NR}' "$2")
website=$(grep -Eo '(http|https)://[a-zA-Z0-9./?=_%:-]*' "$2" | xargs -n1 echo)

#=======================
# Check Websites
#=======================

case "$1" in
	"--insecure")
		for i in $website
		do
			httpcode=$(\curl -k -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36" --max-time 20 --connect-timeout 10 -o /dev/null -s -w "%{http_code}"\\n "$i")
			if [[ "$httpcode" != "20"* ]] && [[ "$httpcode" != "30"* ]] && [[ "$httpcode" != "401" ]]; then
				urlnok=$((urlnok + 1))
				echo "$i is DOWN (HTTP Code: $httpcode)"
				false
			fi
		done
		;;
	"--secure")
		for i in $website
		do
			httpcode=$(\curl -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36" --max-time 20 --connect-timeout 10 -o /dev/null -s -w "%{http_code}"\\n "$i")
			if [[ "$httpcode" != "20"* ]] && [[ "$httpcode" != "30"* ]] && [[ "$httpcode" != "401" ]]; then
				urlnok=$((urlnok + 1))
				echo "$i is DOWN (HTTP Code: $httpcode)"
				false
			fi
		done
		;;
esac

#====================
# Show results
#====================

if [ -z "$urlnok" ]; then
	echo
	echo "Result: all sites are UP ($urlsum checked)"
else
	echo
	echo ------------
	echo "Result: $urlnok/$urlsum sites are DOWN"
fi
