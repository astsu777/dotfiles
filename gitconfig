[user]
	name = Gaetan
	username = astsu777
	email = gaetan@ictpourtous.com

[core]
	editor = vim
	pager = cat

	# Configure Git to ensure line endings in files you checkout are correct for macOS and Linux
	autocrlf = input

	# Global ignore file (not shared)
	excludesfile = ~/.gitignore_global

	# Don't consider trailing space change as a cause for merge conflicts
	whitespace = -trailing-space

[color]
	# Enable colors in color-supporting terminals
	ui = auto

[alias]
	# Display configured aliases
	la = "!git config -l | grep alias | cut -c 7-"

	# Display log in a prettier format
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

	# Display log with changed files
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

	# Display log and show dates
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

	# Display log and show relative date
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative

	# Display log with no colors for piping
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"

	# Display log for a specific file
	fl = log -u

	# Display changed files in last commit
	dl = "!git ll -1"

	# Display full changes in last commit
	dlc = diff --cached HEAD^

	# Show full diff on a given commit
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"

	# Ensure that force-pushing won't lose someone else's work (only mine).
	push-with-lease = push --force-with-lease

	# List local commits that were not pushed to remote repository
	review-local = "!git lg @{push}.."

	# Edit last commit message
	reword = commit --amend

	# Undo last commit but keep changed files in stage
	uncommit = reset --soft HEAD~1

	# Remove file(s) from Git but not from disk
	untrack = rm --cache --

	# Perform operation on all git subfolders
	all = "!f() { ls -R -d */.git | xargs -I{} bash -c \"echo {} && git -C {}/../ $1\"; }; f"

[pull]
	# Automatically rebase when pulling
	rebase = true

[rebase]
	# Automatically stash local modifications when rebase
	autostash = true
[init]
	defaultBranch = master
